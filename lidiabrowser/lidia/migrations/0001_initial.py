# Generated by Django 4.2.7 on 2023-11-08 14:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("sync", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ArticleTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("term", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="BaseAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lidia_id",
                    models.CharField(
                        max_length=100, null=True, unique=True, verbose_name="LIDIA ID"
                    ),
                ),
                (
                    "textselection",
                    models.TextField(default="", verbose_name="quoted text"),
                ),
                (
                    "sort_index",
                    models.CharField(
                        default="",
                        help_text="Index to keep order of annotation in document",
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=3, unique=True)),
                ("name", models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="LidiaTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vocab",
                    models.CharField(
                        choices=[
                            ("lol", "Lexicon of Linguistics"),
                            ("custom", "Custom"),
                        ],
                        max_length=6,
                    ),
                ),
                ("term", models.CharField(max_length=100)),
            ],
            options={
                "unique_together": {("vocab", "term")},
            },
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("zotero_id", models.CharField(max_length=100, unique=True)),
                (
                    "attachment_id",
                    models.CharField(max_length=16, null=True, unique=True),
                ),
                ("title", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Annotation",
            fields=[
                (
                    "baseannotation_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="lidia.baseannotation",
                    ),
                ),
                (
                    "argname",
                    models.CharField(
                        default="", max_length=100, verbose_name="argument name"
                    ),
                ),
                ("description", models.TextField(default="")),
                (
                    "page_start",
                    models.CharField(
                        max_length=16, null=True, verbose_name="start page"
                    ),
                ),
                (
                    "page_end",
                    models.CharField(max_length=16, null=True, verbose_name="end page"),
                ),
                (
                    "relation_type",
                    models.CharField(
                        choices=[
                            ("", "None"),
                            ("contradicts", "Contradicts"),
                            ("generalizes", "Generalizes"),
                            ("invalidates", "Invalidates"),
                            ("specialcase", "Is a special case of"),
                            ("supports", "Supports"),
                        ],
                        default="",
                        max_length=11,
                    ),
                ),
                (
                    "arglang",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lidia.language",
                        to_field="code",
                        verbose_name="subject language",
                    ),
                ),
                (
                    "relation_to",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lidia.annotation",
                    ),
                ),
            ],
            bases=("lidia.baseannotation",),
        ),
        migrations.AddField(
            model_name="baseannotation",
            name="parent_attachment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="lidia.publication",
                to_field="attachment_id",
                verbose_name="publication",
            ),
        ),
        migrations.AddField(
            model_name="baseannotation",
            name="zotero_annotation",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="sync.annotation",
                to_field="zotero_id",
                verbose_name="Zotero annotation",
            ),
        ),
        migrations.CreateModel(
            name="ContinuationAnnotation",
            fields=[
                (
                    "baseannotation_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="lidia.baseannotation",
                    ),
                ),
                (
                    "start_annotation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lidia.annotation",
                    ),
                ),
            ],
            bases=("lidia.baseannotation",),
        ),
        migrations.CreateModel(
            name="TermGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.IntegerField(null=True)),
                (
                    "termtype",
                    models.CharField(
                        choices=[
                            ("definiendum", "Definiendum"),
                            ("definiens", "Definiens"),
                            ("other", "Other"),
                        ],
                        max_length=11,
                        null=True,
                    ),
                ),
                (
                    "articleterm",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lidia.articleterm",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lidia.category",
                    ),
                ),
                (
                    "lidiaterm",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lidia.lidiaterm",
                    ),
                ),
                (
                    "annotation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lidia.annotation",
                    ),
                ),
            ],
            options={
                "unique_together": {("annotation", "index")},
            },
        ),
    ]
